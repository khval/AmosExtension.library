#ifndef AMOSEXTENSION_INTERFACE_DEF_H
#define AMOSEXTENSION_INTERFACE_DEF_H

/*
** This file was machine generated by idltool 53.6.
** Do not edit
*/ 

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef EXEC_EXEC_H
#include <exec/exec.h>
#endif
#ifndef EXEC_INTERFACES_H
#include <exec/interfaces.h>
#endif

#ifndef LIBRARIES_AMOSEXTENSION_H
#include <libraries/amosextension.h>
#endif

#ifdef __cplusplus
#ifdef __USE_AMIGAOS_NAMESPACE__
namespace AmigaOS {
#endif
extern "C" {
#endif

struct AmosExtensionIFace
{
	struct InterfaceData Data;

	ULONG APICALL (*Obtain)(struct AmosExtensionIFace *Self);
	ULONG APICALL (*Release)(struct AmosExtensionIFace *Self);
	void APICALL (*Expunge)(struct AmosExtensionIFace *Self);
	struct Interface * APICALL (*Clone)(struct AmosExtensionIFace *Self);
	struct extension * APICALL (*OpenExtension)(struct AmosExtensionIFace *Self, char * name);
	void APICALL (*CloseExtension)(struct AmosExtensionIFace *Self, struct extension * extension);
	struct TokenInfo * APICALL (*GetCommandByName)(struct AmosExtensionIFace *Self, struct extension * ext, char * name);
	struct TokenInfo * APICALL (*GetCommandByToken)(struct AmosExtensionIFace *Self, struct extension * ext, unsigned short token);
	void APICALL (*FreeTokenInfo)(struct AmosExtensionIFace *Self, struct TokenInfo * info);
	char * APICALL (*GetExtensionName)(struct AmosExtensionIFace *Self, struct extension * ext);
	struct ExtensionDescriptor * APICALL (*FirstExtensionItem)(struct AmosExtensionIFace *Self, struct extension * ext);
	struct ExtensionDescriptor * APICALL (*NextExtensionItem)(struct AmosExtensionIFace *Self, struct ExtensionDescriptor * extension_descriptor);
	void APICALL (*CloseExtensionDescriptor)(struct AmosExtensionIFace *Self, struct ExtensionDescriptor * extension_descriptor);
};

#ifdef __cplusplus
}
#ifdef __USE_AMIGAOS_NAMESPACE__
}
#endif
#endif

#endif /* AMOSEXTENSION_INTERFACE_DEF_H */
